-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity VN_Lch_n_rom is 
    generic(
             DWIDTH     : integer := 2; 
             AWIDTH     : integer := 12; 
             MEM_SIZE    : integer := 2560
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of VN_Lch_n_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 2=> "01", 3 to 7=> "11", 8 to 10=> "01", 11 to 15=> "11", 16 to 18=> "01", 19 to 23=> "11", 
    24 to 26=> "01", 27 to 31=> "11", 32 to 34=> "01", 35 to 39=> "11", 40 to 42=> "01", 43 to 47=> "11", 
    48 to 50=> "01", 51 to 55=> "11", 56 to 58=> "01", 59 to 63=> "11", 64 to 66=> "01", 67 to 71=> "11", 
    72 to 74=> "01", 75 to 79=> "11", 80 to 82=> "01", 83 to 87=> "11", 88 to 90=> "01", 91 to 95=> "11", 
    96 to 98=> "01", 99 to 103=> "11", 104 to 106=> "01", 107 to 111=> "11", 112 to 114=> "01", 115 to 119=> "11", 
    120 to 122=> "01", 123 to 127=> "11", 128 to 130=> "01", 131 to 135=> "11", 136 to 138=> "01", 139 to 143=> "11", 
    144 to 146=> "01", 147 to 151=> "11", 152 to 154=> "01", 155 to 159=> "11", 160 to 162=> "01", 163 to 167=> "11", 
    168 to 170=> "01", 171 to 175=> "11", 176 to 178=> "01", 179 to 183=> "11", 184 to 186=> "01", 187 to 191=> "11", 
    192 to 194=> "01", 195 to 199=> "11", 200 to 202=> "01", 203 to 207=> "11", 208 to 210=> "01", 211 to 215=> "11", 
    216 to 218=> "01", 219 to 223=> "11", 224 to 226=> "01", 227 to 231=> "11", 232 to 234=> "01", 235 to 239=> "11", 
    240 to 242=> "01", 243 to 247=> "11", 248 to 250=> "01", 251 to 255=> "11", 256 to 258=> "01", 259 to 263=> "11", 
    264 to 266=> "01", 267 to 271=> "11", 272 to 274=> "01", 275 to 279=> "11", 280 to 282=> "01", 283 to 287=> "11", 
    288 to 290=> "01", 291 to 295=> "11", 296 to 298=> "01", 299 to 303=> "11", 304 to 306=> "01", 307 to 311=> "11", 
    312 to 314=> "01", 315 to 319=> "11", 320 to 322=> "01", 323 to 327=> "11", 328 to 330=> "01", 331 to 335=> "11", 
    336 to 338=> "01", 339 to 343=> "11", 344 to 346=> "01", 347 to 351=> "11", 352 to 354=> "01", 355 to 359=> "11", 
    360 to 362=> "01", 363 to 367=> "11", 368 to 370=> "01", 371 to 375=> "11", 376 to 378=> "01", 379 to 383=> "11", 
    384 to 386=> "01", 387 to 391=> "11", 392 to 394=> "01", 395 to 399=> "11", 400 to 402=> "01", 403 to 407=> "11", 
    408 to 410=> "01", 411 to 415=> "11", 416 to 418=> "01", 419 to 423=> "11", 424 to 426=> "01", 427 to 431=> "11", 
    432 to 434=> "01", 435 to 439=> "11", 440 to 442=> "01", 443 to 447=> "11", 448 to 450=> "01", 451 to 455=> "11", 
    456 to 458=> "01", 459 to 463=> "11", 464 to 466=> "01", 467 to 471=> "11", 472 to 474=> "01", 475 to 479=> "11", 
    480 to 482=> "01", 483 to 487=> "11", 488 to 490=> "01", 491 to 495=> "11", 496 to 498=> "01", 499 to 503=> "11", 
    504 to 506=> "01", 507 to 511=> "11", 512 to 514=> "01", 515 to 519=> "11", 520 to 522=> "01", 523 to 527=> "11", 
    528 to 530=> "01", 531 to 535=> "11", 536 to 538=> "01", 539 to 543=> "11", 544 to 546=> "01", 547 to 551=> "11", 
    552 to 554=> "01", 555 to 559=> "11", 560 to 562=> "01", 563 to 567=> "11", 568 to 570=> "01", 571 to 575=> "11", 
    576 to 578=> "01", 579 to 583=> "11", 584 to 586=> "01", 587 to 591=> "11", 592 to 594=> "01", 595 to 599=> "11", 
    600 to 602=> "01", 603 to 607=> "11", 608 to 610=> "01", 611 to 615=> "11", 616 to 618=> "01", 619 to 623=> "11", 
    624 to 626=> "01", 627 to 631=> "11", 632 to 634=> "01", 635 to 639=> "11", 640 to 642=> "01", 643 to 647=> "11", 
    648 to 650=> "01", 651 to 655=> "11", 656 to 658=> "01", 659 to 663=> "11", 664 to 666=> "01", 667 to 671=> "11", 
    672 to 674=> "01", 675 to 679=> "11", 680 to 682=> "01", 683 to 687=> "11", 688 to 690=> "01", 691 to 695=> "11", 
    696 to 698=> "01", 699 to 703=> "11", 704 to 706=> "01", 707 to 711=> "11", 712 to 714=> "01", 715 to 719=> "11", 
    720 to 722=> "01", 723 to 727=> "11", 728 to 730=> "01", 731 to 735=> "11", 736 to 738=> "01", 739 to 743=> "11", 
    744 to 746=> "01", 747 to 751=> "11", 752 to 754=> "01", 755 to 759=> "11", 760 to 762=> "01", 763 to 767=> "11", 
    768 to 770=> "01", 771 to 775=> "11", 776 to 778=> "01", 779 to 783=> "11", 784 to 786=> "01", 787 to 791=> "11", 
    792 to 794=> "01", 795 to 799=> "11", 800 to 802=> "01", 803 to 807=> "11", 808 to 810=> "01", 811 to 815=> "11", 
    816 to 818=> "01", 819 to 823=> "11", 824 to 826=> "01", 827 to 831=> "11", 832 to 834=> "01", 835 to 839=> "11", 
    840 to 842=> "01", 843 to 847=> "11", 848 to 850=> "01", 851 to 855=> "11", 856 to 858=> "01", 859 to 863=> "11", 
    864 to 866=> "01", 867 to 871=> "11", 872 to 874=> "01", 875 to 879=> "11", 880 to 882=> "01", 883 to 887=> "11", 
    888 to 890=> "01", 891 to 895=> "11", 896 to 898=> "01", 899 to 903=> "11", 904 to 906=> "01", 907 to 911=> "11", 
    912 to 914=> "01", 915 to 919=> "11", 920 to 922=> "01", 923 to 927=> "11", 928 to 930=> "01", 931 to 935=> "11", 
    936 to 938=> "01", 939 to 943=> "11", 944 to 946=> "01", 947 to 951=> "11", 952 to 954=> "01", 955 to 959=> "11", 
    960 to 962=> "01", 963 to 967=> "11", 968 to 970=> "01", 971 to 975=> "11", 976 to 978=> "01", 979 to 983=> "11", 
    984 to 986=> "01", 987 to 991=> "11", 992 to 994=> "01", 995 to 999=> "11", 1000 to 1002=> "01", 1003 to 1007=> "11", 
    1008 to 1010=> "01", 1011 to 1015=> "11", 1016 to 1018=> "01", 1019 to 1023=> "11", 1024 to 1026=> "01", 1027 to 1031=> "11", 
    1032 to 1034=> "01", 1035 to 1039=> "11", 1040 to 1042=> "01", 1043 to 1047=> "11", 1048 to 1050=> "01", 1051 to 1055=> "11", 
    1056 to 1058=> "01", 1059 to 1063=> "11", 1064 to 1066=> "01", 1067 to 1071=> "11", 1072 to 1074=> "01", 1075 to 1079=> "11", 
    1080 to 1082=> "01", 1083 to 1087=> "11", 1088 to 1090=> "01", 1091 to 1095=> "11", 1096 to 1098=> "01", 1099 to 1103=> "11", 
    1104 to 1106=> "01", 1107 to 1111=> "11", 1112 to 1114=> "01", 1115 to 1119=> "11", 1120 to 1122=> "01", 1123 to 1127=> "11", 
    1128 to 1130=> "01", 1131 to 1135=> "11", 1136 to 1138=> "01", 1139 to 1143=> "11", 1144 to 1146=> "01", 1147 to 1151=> "11", 
    1152 to 1154=> "01", 1155 to 1159=> "11", 1160 to 1162=> "01", 1163 to 1167=> "11", 1168 to 1170=> "01", 1171 to 1175=> "11", 
    1176 to 1178=> "01", 1179 to 1183=> "11", 1184 to 1186=> "01", 1187 to 1191=> "11", 1192 to 1194=> "01", 1195 to 1199=> "11", 
    1200 to 1202=> "01", 1203 to 1207=> "11", 1208 to 1210=> "01", 1211 to 1215=> "11", 1216 to 1218=> "01", 1219 to 1223=> "11", 
    1224 to 1226=> "01", 1227 to 1231=> "11", 1232 to 1234=> "01", 1235 to 1239=> "11", 1240 to 1242=> "01", 1243 to 1247=> "11", 
    1248 to 1250=> "01", 1251 to 1255=> "11", 1256 to 1258=> "01", 1259 to 1263=> "11", 1264 to 1266=> "01", 1267 to 1271=> "11", 
    1272 to 1274=> "01", 1275 to 1279=> "11", 1280 to 1282=> "01", 1283 to 1287=> "11", 1288 to 1290=> "01", 1291 to 1295=> "11", 
    1296 to 1298=> "01", 1299 to 1303=> "11", 1304 to 1306=> "01", 1307 to 1311=> "11", 1312 to 1314=> "01", 1315 to 1319=> "11", 
    1320 to 1322=> "01", 1323 to 1327=> "11", 1328 to 1330=> "01", 1331 to 1335=> "11", 1336 to 1338=> "01", 1339 to 1343=> "11", 
    1344 to 1346=> "01", 1347 to 1351=> "11", 1352 to 1354=> "01", 1355 to 1359=> "11", 1360 to 1362=> "01", 1363 to 1367=> "11", 
    1368 to 1370=> "01", 1371 to 1375=> "11", 1376 to 1378=> "01", 1379 to 1383=> "11", 1384 to 1386=> "01", 1387 to 1391=> "11", 
    1392 to 1394=> "01", 1395 to 1399=> "11", 1400 to 1402=> "01", 1403 to 1407=> "11", 1408 to 1410=> "01", 1411 to 1415=> "11", 
    1416 to 1418=> "01", 1419 to 1423=> "11", 1424 to 1426=> "01", 1427 to 1431=> "11", 1432 to 1434=> "01", 1435 to 1439=> "11", 
    1440 to 1442=> "01", 1443 to 1447=> "11", 1448 to 1450=> "01", 1451 to 1455=> "11", 1456 to 1458=> "01", 1459 to 1463=> "11", 
    1464 to 1466=> "01", 1467 to 1471=> "11", 1472 to 1474=> "01", 1475 to 1479=> "11", 1480 to 1482=> "01", 1483 to 1487=> "11", 
    1488 to 1490=> "01", 1491 to 1495=> "11", 1496 to 1498=> "01", 1499 to 1503=> "11", 1504 to 1506=> "01", 1507 to 1511=> "11", 
    1512 to 1514=> "01", 1515 to 1519=> "11", 1520 to 1522=> "01", 1523 to 1527=> "11", 1528 to 1530=> "01", 1531 to 1535=> "11", 
    1536 to 1538=> "01", 1539 to 1543=> "11", 1544 to 1546=> "01", 1547 to 1551=> "11", 1552 to 1554=> "01", 1555 to 1559=> "11", 
    1560 to 1562=> "01", 1563 to 1567=> "11", 1568 to 1570=> "01", 1571 to 1575=> "11", 1576 to 1578=> "01", 1579 to 1583=> "11", 
    1584 to 1586=> "01", 1587 to 1591=> "11", 1592 to 1594=> "01", 1595 to 1599=> "11", 1600 to 1602=> "01", 1603 to 1607=> "11", 
    1608 to 1610=> "01", 1611 to 1615=> "11", 1616 to 1618=> "01", 1619 to 1623=> "11", 1624 to 1626=> "01", 1627 to 1631=> "11", 
    1632 to 1634=> "01", 1635 to 1639=> "11", 1640 to 1642=> "01", 1643 to 1647=> "11", 1648 to 1650=> "01", 1651 to 1655=> "11", 
    1656 to 1658=> "01", 1659 to 1663=> "11", 1664 to 1666=> "01", 1667 to 1671=> "11", 1672 to 1674=> "01", 1675 to 1679=> "11", 
    1680 to 1682=> "01", 1683 to 1687=> "11", 1688 to 1690=> "01", 1691 to 1695=> "11", 1696 to 1698=> "01", 1699 to 1703=> "11", 
    1704 to 1706=> "01", 1707 to 1711=> "11", 1712 to 1714=> "01", 1715 to 1719=> "11", 1720 to 1722=> "01", 1723 to 1727=> "11", 
    1728 to 1730=> "01", 1731 to 1735=> "11", 1736 to 1738=> "01", 1739 to 1743=> "11", 1744 to 1746=> "01", 1747 to 1751=> "11", 
    1752 to 1754=> "01", 1755 to 1759=> "11", 1760 to 1762=> "01", 1763 to 1767=> "11", 1768 to 1770=> "01", 1771 to 1775=> "11", 
    1776 to 1778=> "01", 1779 to 1783=> "11", 1784 to 1786=> "01", 1787 to 1791=> "11", 1792 to 1794=> "01", 1795 to 1799=> "11", 
    1800 to 1802=> "01", 1803 to 1807=> "11", 1808 to 1810=> "01", 1811 to 1815=> "11", 1816 to 1818=> "01", 1819 to 1823=> "11", 
    1824 to 1826=> "01", 1827 to 1831=> "11", 1832 to 1834=> "01", 1835 to 1839=> "11", 1840 to 1842=> "01", 1843 to 1847=> "11", 
    1848 to 1850=> "01", 1851 to 1855=> "11", 1856 to 1858=> "01", 1859 to 1863=> "11", 1864 to 1866=> "01", 1867 to 1871=> "11", 
    1872 to 1874=> "01", 1875 to 1879=> "11", 1880 to 1882=> "01", 1883 to 1887=> "11", 1888 to 1890=> "01", 1891 to 1895=> "11", 
    1896 to 1898=> "01", 1899 to 1903=> "11", 1904 to 1906=> "01", 1907 to 1911=> "11", 1912 to 1914=> "01", 1915 to 1919=> "11", 
    1920 to 1922=> "01", 1923 to 1927=> "11", 1928 to 1930=> "01", 1931 to 1935=> "11", 1936 to 1938=> "01", 1939 to 1943=> "11", 
    1944 to 1946=> "01", 1947 to 1951=> "11", 1952 to 1954=> "01", 1955 to 1959=> "11", 1960 to 1962=> "01", 1963 to 1967=> "11", 
    1968 to 1970=> "01", 1971 to 1975=> "11", 1976 to 1978=> "01", 1979 to 1983=> "11", 1984 to 1986=> "01", 1987 to 1991=> "11", 
    1992 to 1994=> "01", 1995 to 1999=> "11", 2000 to 2002=> "01", 2003 to 2007=> "11", 2008 to 2010=> "01", 2011 to 2015=> "11", 
    2016 to 2018=> "01", 2019 to 2023=> "11", 2024 to 2026=> "01", 2027 to 2031=> "11", 2032 to 2034=> "01", 2035 to 2039=> "11", 
    2040 to 2042=> "01", 2043 to 2047=> "11", 2048 to 2559=> "00" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity VN_Lch_n is
    generic (
        DataWidth : INTEGER := 2;
        AddressRange : INTEGER := 2560;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of VN_Lch_n is
    component VN_Lch_n_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    VN_Lch_n_rom_U :  component VN_Lch_n_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


